# The following lines were added by compinstall

zstyle ':completion:*' completer _expand _complete _correct _approximate
zstyle ':completion:*' completions 1
zstyle ':completion:*' file-sort name
zstyle ':completion:*' glob 1
zstyle ':completion:*' list-colors ''
zstyle ':completion:*' list-prompt %SAt %p: Hit TAB for more, or the character to insert%s
zstyle ':completion:*' max-errors 1 numeric
zstyle ':completion:*' menu select=long
zstyle ':completion:*' original true
zstyle ':completion:*' prompt '%n@%m:${PWD/$HOME/"~"}%e%#'
zstyle ':completion:*' select-prompt %SScrolling active: current selection at %p%s
zstyle ':completion:*' substitute 1
zstyle ':completion:*' verbose true
zstyle :compinstall filename '/home/ccabrera/.zshrc'

autoload -Uz compinit
compinit
# End of lines added by compinstall
# Lines configured by zsh-newuser-install
HISTFILE=~/.histfile
HISTSIZE=1000
SAVEHIST=1000
setopt appendhistory nomatch
unsetopt beep

#bindkey -v

#function zle-line-init zle-keymap-select {
#    VIM_PROMPT="%{$fg_bold[yellow]%} [% NORMAL]%  %{$reset_color%}"
#    RPS1="${${KEYMAP/vicmd/$VIM_PROMPT}/(main|viins)/} $EPS1"
#    zle reset-prompt
#}

#zle -N zle-line-init
#zle -N zle-keymap-select
#export KEYTIMEOUT=1

#source programacion/github/opp.zsh/opp.zsh
#source programacion/github/opp.zsh/opp/*.zsh


##PATH
# set PATH so it includes user's private bin if it exists
if [ -d "$HOME/bin" ] ; then
    PATH="$HOME/bin:$PATH"
fi

if [ -d "$HOME/al/build" ] ; then
    PATH="$HOME/al/build:$PATH"
fi

if [ -d "$HOME/al/dev_scripts" ] ; then
    PATH="$HOME/al/dev_scripts:$PATH"
fi

if [ -d "$HOME/al/parser_dev_testing/bin" ] ; then
    PATH="$HOME/al/parser_dev_testing/bin:$PATH"
fi

export PATH="$PATH:/sbin:/usr/sbin:/usr/local/sbin:/bin:/usr/bin:/usr/local/bin:/usr/bin/X11:/usr/games"
export PYTHONPATH=".:$HOME/programacion/python"

# Alias para AlertLogic
alias pdk-xml-search='awk -f ~/al/pdk/bin/pdk-xml-search'

export repo=$HOME/al/log-parsers
cd $repo/..
source kerl/activate
source dev_scripts/.setup_dev_env
cd -

function dt {
    cd /tmp
    escript ~/al/log-parsers-tools/bin/log_parsers_tool.erl $1
    cd -
}

if [ $TERM = "rxvt" ];then
    export LC_CTYPE=en_US.iso-8859-1
fi

#Carga mapa de teclado personal
alias njam="njam -w"

# Alias para los usuarios de sgml
alias sgml2html='sgml2html -c latin -l es'
alias sgml2txt='sgml2txt -c latin -l es'
alias sgml2rtf='sgml2rtf -c latin -l es'

# Alias para wifite
alias wep0="sudo ifconfig wlan0 down; sudo iwconfig wlan0 mode Monitor; time sudo wifite -i wlan0 -all -wep; sleep 2; sudo ifconfig wlan0 down; sleep 2; sudo iwconfig wlan0 mode Managed; sleep 2; sudo ifconfig wlan0 up"
alias wep1="sudo ifconfig wlan1 down; sudo iwconfig wlan1 mode Monitor; time sudo wifite -i wlan1 -all -wep; sleep 2; sudo ifconfig wlan1 down; sleep 2; sudo iwconfig wlan1 mode Managed; sleep 2; sudo ifconfig wlan1 up"
alias wpa="sudo ifconfig wlan0 down; sudo iwconfig wlan0 mode Monitor; time sudo wifite -i wlan0 -all -wpa; sleep 2; sudo ifconfig wlan0 down; sleep 2; sudo iwconfig wlan0 mode Managed; sleep 2; sudo ifconfig wlan0 up"

function wifite.essid {
    cd
    sudo ifconfig wlan0 down
    sudo iwconfig wlan0 mode Monitor
    time sudo wifite -i wlan0 -e "$1"
    sleep 2
    sudo ifconfig wlan0 down
    sleep 2
    sudo iwconfig wlan0 mode Managed
    sleep 2
    sudo ifconfig wlan0 up
}

# Alias para los vagos
#alias rdu="du -x --max-depth=1|sort -rn|awk -F \"/\" -v c=$COLUMNS 'NR==1{t=$1} NR>1{r=int($1/t*c+.5); b="\033[1;31m"; for (i=0; i<r; i++) b=b"#"; printf " %5.2f%% %s\033[0m %s\n", $1/t*100, b, $2}'"
alias Rsync="rsync -Pavz --delete"
function syncto.katarina {
    Rsync $@  deimos@Katarina:$PWD/
}
alias unsort="sort -R"
alias tree="tree -CAFa -I 'CVS|*.*.package|.svn|.git' --dirsfirst"
alias l='ls -l'
alias t="ls -rt1a"
alias lc="ls|wc -l"
alias d='df -h'
#alias mplayer='mplayer -stop-xscreensaver -sub-fuzziness 1 -ass -embeddedfonts -ass-line-spacing 0 -ass-font-scale 1 -ass-styles /home/ccabrera/.config/smplayer/styles.ass -fontconfig -font Arial -subfont-autoscale 0 -subfont-osd-scale 20 -subfont-text-scale 20 -subcp ISO-8859-1 -subpos 80'
alias nsmp='mplayer -nosound -fs'
alias splayer='mplayer -msglevel all=0'
alias mp='mplayer -af scaletempo -fs'
alias qmp='mp -quiet --gapless-audio'
alias smp='esperar mplayer;mp '
alias manage='./manage.py'
alias propagar='unison default -auto -batch'
alias p='python'
alias commit='git commit --interactive; while git status|grep "modified:">/dev/null; do git commit --interactive;done'
export GIT_SSL_NO_VERIFY=1 # FIXME

# HDMI gestion
alias hdmi_same="xrandr --output HDMI1 --same-as LVDS1"
alias hdmi_above="xrandr --output HDMI1 --above LVDS1"
alias hdmi_below="xrandr --output HDMI1 --below LVDS1"

# Vim power
alias vim='vim -p'

function pvim {
    awk '

        {
            a[i++] = $0

        }

        END{
            print NR>"/dev/shm/pvim.total"
            for (i=0; i<NR; i++)
                print a[i]
        }

    ' > /dev/shm/pvim.pipe
    cat /dev/shm/pvim.pipe | parallel --tty "notify-send -t 1000 {#}/$(cat /dev/shm/pvim.total); vim -p {}"
}

function vimack {
    ack -l "$@" | awk '

        {
            a[i++] = $0
        }

        END{
            print NR>"/dev/shm/pvim.total"
            for (i=0; i<NR; i++)
                print a[i]
        }

    ' > /dev/shm/pvim.pipe
    cat /dev/shm/pvim.pipe | parallel --tty "notify-send -t 1000 {#}/$(cat /dev/shm/pvim.total); vim -p +/$@/ {}"
}

function vimcurrentxml {
    ps axu | awk '/vim /&&/\.xml$/{
        print substr($0, 73)
    }'
}

# Alias Alert Logic

#Pruebas de conectividad
alias internet='delatar conexion'
gateway='/gateway/&&!/^#/{system("delatar ping -i .2 -c 1 " $2); exit}'
gateway="awk '$gateway' /etc/network/interfaces"
alias gateway="$gateway"
interfaz=$(ifconfig|awk 'BEGIN{RS="\n\n"}/inet6/&&/eth|wlan/{print $1}')
alias traficodered="nload -i 2048 -o 2048 -t 2000 -s 5 -u K $interfaz"

# Alias de debian
alias .upgrade='sudo apt-get update&&\
sudo experimental upgrade -y &&\
sudo unstable upgrade -y &&\
sudo aptitude dist-upgrade -y &&\
sudo stable upgrade -y &&\
sudo aptitude clean'
alias .install="sudo apt-get install -y"
alias .fix="sudo apt install -f"
alias .why="sudo apt why"
alias .remove="sudo apt-get remove"
alias .purge="sudo apt-get purge"
alias .search="apt-cache search"
alias .show="apt-cache show"
alias .reconfigure="sudo dpkg-reconfigure"
alias .list="sudo dpkg -l"
alias .foster="LANG=C sudo debfoster"
alias .orphaner="sudo orphaner"

alias .einstall="sudo experimental install"
alias .eforget="sudo experimental forget"
alias .eremove="sudo experimental remove"

alias .uinstall="sudo unstable install"
alias .uforget="sudo unstable forget"
alias .uremove="sudo unstable remove"

apt-cache(){
    LANG="C" /usr/bin/apt-cache $@
}

# Util para escribir reglas de auto-propiedades de pekwm
propstring () {
  echo -n 'Property '
  xprop WM_CLASS | sed 's/.*"\(.*\)", "\(.*\)".*/= "\1,\2" {/g'
  echo '}'
}


alias matrix='if [ "$TERM" = "linux" ];then cmatrix -sablu 3; else cmatrix -sabxu 3; fi'

alias menu='cat /etc/X11/WindowMaker/menu.hook'

# Alias para los editores
alias joe='joe -asis'

# Alias para colores
alias ls='ls --color=auto'
alias grep='grep --color=auto'

## Alias para sonido
#alias play='aplay'

# Alias para mc
alias mc='mc -ux'

# Alias de hosts
alias malujada='ssh cluster@malujada.no-ip.org'
alias kathe='ssh cluster@kathe.no-ip.info'
alias condor='ssh cluster@condor.no-ip.org'
alias milva='ssh -p 2222 deimos@milva.no-ip.org'
alias diana='ssh deimos@diana'
alias mirror='ssh debian@170.210.200.227'
alias asterisk='ssh root@asterisk'
alias saltalug='ssh point_to_null@saltalug.org.ar'
alias unsa='ssh saltalug@www.unsa.edu.ar'
alias grupogatma='ssh grupogatma@www.unsa.edu.ar'
alias gatma='ssh gatma@www.unsa.edu.ar'
alias diego='ssh deimos@diego'
alias labegob='ssh labegob@labegob'
alias js2='ssh -p 57284 js2'
alias js3='ssh -p 57284 js3'
alias js4='ssh -p 57284 js4'

# Alias para paranoicos
alias RM='shred -vuz'

# Alias para AlertLogic
alias uuid='uuidgen | tr "[a-z]" "[A-Z]"'

# ConfiguraciÃ³n de notebook
[ $HOST = "dalek" ] && synclient HorizTwoFingerScroll=1

############################### MEGAPROMPT ##############################
function precmd {
    local TERMWIDTH
    (( TERMWIDTH = ${COLUMNS} - 1 ))

    # Truncate the path if it's too long.
    PR_FILLBAR=""
    PR_PWDLEN=""

    local promptsize=${#${(%):---(%n@%m:%l)---()--}}
    local pwdsize=${#${(%):-%~}}

    if [[ "$promptsize + $pwdsize" -gt $TERMWIDTH ]]; then
        ((PR_PWDLEN=$TERMWIDTH - $promptsize))
    else
        PR_FILLBAR="\${(l.(($TERMWIDTH - ($promptsize + $pwdsize)))..${PR_HBAR}.)}"
    fi

    # Get APM info.
    if which ibam > /dev/null; then
        PR_APM_RESULT=`ibam --percentbattery`
    elif which apm > /dev/null; then
        PR_APM_RESULT=`apm`
    fi
}

setopt extended_glob
preexec () {
    if [[ "$TERM" == "screen" ]]; then
        local CMD=${1[(wr)^(*=*|sudo|-*)]}
        echo -n "\ek$CMD\e\\"
    fi
}

setprompt () {
    # Need this so the prompt will work.
    setopt prompt_subst

    # See if we can use colors.
    autoload colors zsh/terminfo
    if [[ "$terminfo[colors]" -ge 8 ]]; then
        colors
    fi
        for color in RED GREEN YELLOW BLUE MAGENTA CYAN WHITE; do
            eval PR_$color='%{$terminfo[bold]$fg[${(L)color}]%}'
            eval PR_LIGHT_$color='%{$fg[${(L)color}]%}'
            (( count = $count + 1 ))
        done
    PR_NO_COLOUR="%{$terminfo[sgr0]%}"

    # See if we can use extended characters to look nicer.
    typeset -A altchar
    set -A altchar ${(s..)terminfo[acsc]}
    PR_SET_CHARSET="%{$terminfo[enacs]%}"
    PR_SHIFT_IN="%{$terminfo[smacs]%}"
    PR_SHIFT_OUT="%{$terminfo[rmacs]%}"
    PR_HBAR=${altchar[q]:--}
    PR_ULCORNER=${altchar[l]:--}
    PR_LLCORNER=${altchar[m]:--}
    PR_LRCORNER=${altchar[j]:--}
    PR_URCORNER=${altchar[k]:--}
     
    # Decide if we need to set titlebar text.
    case $TERM in
    xterm*)
        PR_TITLEBAR=$'%{\e]0;%(!.-=*[ROOT]*=- | .)%n@%m:%~ | ${COLUMNS}x${LINES} | %y\a%}'
        ;;
    screen)
        PR_TITLEBAR=$'%{\e_screen \005 (\005t) | %(!.-=[ROOT]=- | .)%n@%m:%~ | ${COLUMNS}x${LINES} | %y\e\\%}'
        ;;
    *)
        PR_TITLEBAR=''
        ;;
    esac
    
    # Decide whether to set a screen title
    if [[ "$TERM" == "screen" ]]; then
        PR_STITLE=$'%{\ekzsh\e\\%}'
    else
        PR_STITLE=''
    fi
    
    # APM detection
    if which ibam > /dev/null; then
        PR_APM='$PR_RED${${PR_APM_RESULT[(f)1]}[(w)-2]}%%(${${PR_APM_RESULT[(f)3]}[(w)-1]})$PR_LIGHT_BLUE:'
    elif which apm > /dev/null; then
        PR_APM='$PR_RED${PR_APM_RESULT[(w)5,(w)6]/\% /%%}$PR_LIGHT_BLUE:'
    else
        PR_APM=''
    fi
    
    case $TERM in
    linux*)
        PROMPT='$PR_SET_CHARSET$PR_STITLE${(e)PR_TITLEBAR}\
$PR_CYAN$PR_SHIFT_IN$PR_ULCORNER$PR_BLUE$PR_HBAR$PR_SHIFT_OUT(\
$PR_GREEN%(!.%SROOT%s.%n)$PR_GREEN@%m:%l\
$PR_BLUE)$PR_SHIFT_IN$PR_HBAR$PR_CYAN$PR_HBAR${(e)PR_FILLBAR}$PR_BLUE$PR_HBAR$PR_SHIFT_OUT(\
$PR_MAGENTA%$PR_PWDLEN<...<%~%<<\
$PR_BLUE)$PR_SHIFT_IN$PR_HBAR$PR_CYAN$PR_URCORNER$PR_SHIFT_OUT\

$PR_CYAN$PR_SHIFT_IN$PR_LLCORNER$PR_BLUE$PR_HBAR$PR_SHIFT_OUT(\
%(?..$PR_LIGHT_RED%?$PR_BLUE:)\
${(e)PR_APM}$PR_YELLOW%D{%H:%M}\
$PR_LIGHT_BLUE:%(!.$PR_RED.$PR_WHITE)%#$PR_BLUE)$PR_SHIFT_IN$PR_HBAR$PR_SHIFT_OUT\
$PR_CYAN$PR_SHIFT_IN$PR_HBAR$PR_SHIFT_OUT\
$PR_NO_COLOUR '

        PS2='$PR_CYAN$PR_SHIFT_IN$PR_HBAR$PR_SHIFT_OUT\
$PR_BLUE$PR_SHIFT_IN$PR_HBAR$PR_SHIFT_OUT(\
$PR_LIGHT_GREEN%_$PR_BLUE)$PR_SHIFT_IN$PR_HBAR$PR_SHIFT_OUT\
$PR_CYAN$PR_SHIFT_IN$PR_HBAR$PR_SHIFT_OUT$PR_NO_COLOUR '
        ;;
    *)
        PROMPT='$PR_SET_CHARSET$PR_STITLE${(e)PR_TITLEBAR}\
$PR_CYAN$PR_SHIFT_IN$PR_ULCORNER$PR_BLUE$PR_HBAR$PR_SHIFT_OUT(\
$PR_GREEN%(!.%SROOT%s.%n)$PR_GREEN@%m:%l\
$PR_BLUE)$PR_SHIFT_IN$PR_HBAR$PR_CYAN$PR_HBAR${(e)PR_FILLBAR}$PR_BLUE$PR_HBAR$PR_SHIFT_OUT(\
$PR_MAGENTA%$PR_PWDLEN<...<%~%<<\
$PR_BLUE)$PR_SHIFT_IN$PR_HBAR$PR_CYAN$PR_URCORNER$PR_SHIFT_OUT\

$PR_CYAN$PR_SHIFT_IN$PR_LLCORNER$PR_BLUE$PR_HBAR$PR_SHIFT_OUT(\
%(?..$PR_LIGHT_RED%?$PR_BLUE:)\
${(e)PR_APM}$PR_YELLOW%D{%H:%M}\
$PR_LIGHT_BLUE:%(!.$PR_RED.$PR_WHITE)%#$PR_BLUE)$PR_SHIFT_IN$PR_HBAR$PR_SHIFT_OUT\
$PR_CYAN$PR_SHIFT_IN$PR_HBAR$PR_SHIFT_OUT\
$PR_NO_COLOUR '

        RPROMPT=' $PR_CYAN$PR_SHIFT_IN$PR_HBAR$PR_BLUE$PR_HBAR$PR_SHIFT_OUT\
($PR_YELLOW%D{%a,%d%b}$PR_BLUE)$PR_SHIFT_IN$PR_HBAR$PR_CYAN$PR_LRCORNER$PR_SHIFT_OUT$PR_NO_COLOUR'

        PS2='$PR_CYAN$PR_SHIFT_IN$PR_HBAR$PR_SHIFT_OUT\
$PR_BLUE$PR_SHIFT_IN$PR_HBAR$PR_SHIFT_OUT(\
$PR_LIGHT_GREEN%_$PR_BLUE)$PR_SHIFT_IN$PR_HBAR$PR_SHIFT_OUT\
$PR_CYAN$PR_SHIFT_IN$PR_HBAR$PR_SHIFT_OUT$PR_NO_COLOUR '
        ;;
    esac
    

    # Finally, the prompt.
}

setprompt
###################### FIN DE MEGAPROMT #######################

# Fortune
echo; fortune|grep .;echo

##### todo ######
cd(){
    if builtin cd "$@"; then
        ko
    fi
}
pushd(){
    if builtin pushd "$@"; then
        ko
    fi
}
popd(){
    if builtin popd "$@"; then
        ko
    fi
}
alias td="todo -s +children"
alias tda="tda -p3"
ko
##### /todo #####
