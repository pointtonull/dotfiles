zstyle ':completion:*' completer _expand _complete _correct _approximate
zstyle ':completion:*' completions 1
zstyle ':completion:*' file-sort name
zstyle ':completion:*' glob 1
zstyle ':completion:*' list-colors ''
zstyle ':completion:*' list-prompt %SAt %p: Hit TAB for more, or the character to insert%s
zstyle ':completion:*' max-errors 1 numeric
zstyle ':completion:*' menu select=long
zstyle ':completion:*' original true
zstyle ':completion:*' prompt '%n@%m:${PWD/$HOME/"~"}%e%#'
zstyle ':completion:*' select-prompt %SScrolling active: current selection at %p%s
zstyle ':completion:*' substitute 1
zstyle ':completion:*' verbose true
zstyle :compinstall filename '/home/ccabrera/.zshrc'

autoload -Uz compinit
compinit
# End of lines added by compinstall
# Lines configured by zsh-newuser-install
HISTFILE=~/.histfile
HISTSIZE=1000
SAVEHIST=1000
setopt appendhistory nomatch
unsetopt beep

#source programacion/github/opp.zsh/opp.zsh
#source programacion/github/opp.zsh/opp/*.zsh

##PATH
# set PATH so it includes user's private bin if it exists
if [ -d "$HOME/bin" ] ; then
    PATH="$HOME/bin:$PATH"
fi

export PATH="$PATH:/sbin:/usr/sbin:/usr/local/sbin:/bin:/usr/bin:/usr/local/bin:/usr/bin/X11:/usr/games"
export PYTHONPATH=".:$HOME/programacion/python"

# Alias para AlertLogic
alias pdk-xml-search='awk -f ~/al/pdk/bin/pdk-xml-search'
alias rebuild='open "http://et-ci-01.outcomes.marathon.alertlogic.net:8080/job/${PWD##*/}/lastCompletedBuild/rebuild/parameterized"'

if [ $TERM = "rxvt" ];then
    export LC_CTYPE=en_US.iso-8859-1
fi

## Better man
#alias man="pinfo -m"

# Alias para los usuarios de sgml
alias sgml2html='sgml2html -c latin -l es'
alias sgml2txt='sgml2txt -c latin -l es'
alias sgml2rtf='sgml2rtf -c latin -l es'


case "$OSTYPE" in
    darwin*)
        fpath=(/usr/local/share/zsh-completions $fpath)
        alias ls='ls -G'
        alias tac="awk '{lines[NR]=\$0} END{for (line=NR+1; line--; line>0) print lines[line]}'"

        # Brew
        alias .clean="brew cleanup"
        alias .fix="brew doctor"
        alias .install="brew install"
        alias .list="brew list"
        alias .purge="brew -f remove"
        alias .reinstall="brew reinstall"
        alias .remove="brew remove"
        alias .search="brew search --desc"
        alias .show="brew info"
        alias .upgrade='brew update && brew upgrade'
        alias .why="brew uses --recursive"

    ;;
    linux*)
        [ $HOST = "dalek" ] && synclient HorizTwoFingerScroll=1
        alias ls='ls --color=auto'

        # Debian
        alias .clean="sudo apt clean"
        alias .fix="sudo aptitude install -f"
        alias .foster="LANG=C sudo debfoster"
        alias .install="sudo apt install -y"
        alias .list="sudo dpkg -l"
        alias .orphaner="sudo orphaner"
        alias .purge="sudo apt purge"
        alias .reconfigure="sudo dpkg-reconfigure"
        alias .reinstall="sudo aptitude reinstall -y"
        alias .remove="sudo apt remove"
        alias .search="apt search"
        alias .show="apt show"
        alias .upgrade='sudo apt update&&sudo aptitude dist-upgrade -y'
        alias .why="sudo apt why"

    ;;
    *)
        echo "unknown: $OSTYPE"
    ;;
esac

alias unsort="sort -R"
alias Rsync="rsync -Pavz --delete"

function syncto.katarina {
    Rsync $@  deimos@Katarina:$PWD/
}

function s {
    ls -asr1 $@ | sort -n
}

alias tree="tree -CAFa -I 'CVS|*.*.package|.svn|.git' --dirsfirst"
alias l='ls -l'
alias t="ls -rt1a"
alias lc="ls|wc -l"
alias d='df -h'
alias nsmp='mplayer -nosound -fs'
alias splayer='mplayer -msglevel all=0'
alias mp='mplayer -af scaletempo -fs'
alias qmp='mp -volume 3 -shuffle -loop 0 -quiet -vo null'
alias smp='esperar mplayer;mp '
alias manage='./manage.py'
alias propagar='unison default -auto -batch'
alias p='python'

export GIT_SSL_NO_VERIFY=1 # FIXME
alias git-tree='git log --graph --pretty="%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr) %C(bold blue)<%an>%Creset" --abbrev-commit --all'
function rebase {
    echo git rebase --interactive --autostash HEAD~$1
    git rebase --interactive --autostash HEAD~$1
}


# HDMI gestion
alias hdmi_same="xrandr --output HDMI1 --same-as LVDS1"
alias hdmi_above="xrandr --output HDMI1 --above LVDS1"
alias hdmi_below="xrandr --output HDMI1 --below LVDS1"

# Vim power
alias vim='vim -p'

if [[ $(uname) == "Darwin" ]]; then
    alias pvim='parallel --tty vim'
else
    function pvim {
        awk '

            {
                a[i++] = $0

            }

            END{
                print NR>"/dev/shm/pvim.total"
                for (i=0; i<NR; i++)
                    print a[i]
            }

        ' > /dev/shm/pvim.pipe
        cat /dev/shm/pvim.pipe | parallel --tty "notify-send -t 1000 {#}/$(cat /dev/shm/pvim.total); vim -p {}"
    }
fi

function vimack {
    ack -l "$@" | awk '

        {
            a[i++] = $0
        }

        END{
            print NR>"/dev/shm/pvim.total"
            for (i=0; i<NR; i++)
                print a[i]
        }

    ' > /dev/shm/pvim.pipe
    cat /dev/shm/pvim.pipe | parallel --tty "notify-send -t 1000 {#}/$(cat /dev/shm/pvim.total); vim -p +/$@/ {}"
}

function vimcurrentxml {
    ps axu | awk '/vim /&&/\.xml$/{
        print substr($0, 73)
    }'
}

# Alias Alert Logic
function validate_cfn {
    echo aws cloudformation validate-template --template-body file://$1
    aws cloudformation validate-template --template-body file://$1
}

#Pruebas de conectividad
alias internet='delatar conexion'
gateway='/gateway/&&!/^#/{system("delatar ping -i .2 -c 1 " $2); exit}'
gateway="awk '$gateway' /etc/network/interfaces"
alias gateway="$gateway"
interfaz=$(ifconfig|awk 'BEGIN{RS="\n\n"}/inet6/&&/eth|wlan/{print $1}')
alias traficodered="nload -i 2048 -o 2048 -t 2000 -s 5 -u K $interfaz"

apt-cache(){
    LANG="C" /usr/bin/apt-cache $@
}

# Util para escribir reglas de auto-propiedades de pekwm
propstring () {
  echo -n 'Property '
  xprop WM_CLASS | sed 's/.*"\(.*\)", "\(.*\)".*/= "\1,\2" {/g'
  echo '}'
}


alias matrix='if [ "$TERM" = "linux" ];then cmatrix -sablu 3; else cmatrix -sabxu 3; fi'

alias menu='cat /etc/X11/WindowMaker/menu.hook'

# Alias para los editores
alias joe='joe -asis'

# Alias para colores

alias grep='grep --color=auto'

## Alias para sonido
#alias play='aplay'

# Alias para mc
alias mc='mc -ux'

# Alias de hosts
alias mirror='ssh debian@170.210.200.227'
alias asterisk='ssh root@asterisk'
alias saltalug='ssh point_to_null@saltalug.org.ar'
alias unsa='ssh saltalug@www.unsa.edu.ar'
alias grupogatma='ssh grupogatma@www.unsa.edu.ar'
alias gatma='ssh gatma@www.unsa.edu.ar'
alias diego='ssh deimos@diego'
alias labegob='ssh labegob@labegob'
alias js2='ssh -p 57284 js2'
alias js3='ssh -p 57284 js3'
alias js4='ssh -p 57284 js4'

# Alias para paranoicos
alias RM='shred -vuz'

# Alias para AlertLogic
alias uuid='uuidgen | tr "[a-z]" "[A-Z]"'

# Fortune
echo; fortune|grep .;echo

##### todo ######
cd(){
    if builtin cd "$@"; then
        ko
        echo -e '\033k' "${PWD##*/}" '\033\\'
    fi
}
pushd(){
    if builtin pushd "$@"; then
        ko
        echo -e '\033k' "${PWD##*/}" '\033\\'
    fi
}
popd(){
    if builtin popd "$@"; then
        ko
        echo -e '\033k' "${PWD##*/}" '\033\\'
    fi
}
alias td="todo -s +children"
alias tda="tda -p3"

case "$OSTYPE" in
  darwin*) source ~/.profile;;
esac

export VIRTUALENVWRAPPER_PYTHON=/usr/local/bin/python
export VIRTUALENVWRAPPER_VIRTUALENV=/usr/local/bin/virtualenv
source /usr/local/bin/virtualenvwrapper.sh

ko
##### /todo #####

## PROMPT
# config in ~/.liquidpromptrc
if [ -f /usr/local/share/liquidprompt ]; then
    source /usr/local/share/liquidprompt
fi


test -e "${HOME}/.iterm2_shell_integration.zsh" && source "${HOME}/.iterm2_shell_integration.zsh"
