#!/usr/bin/env python3

from subprocess import check_output, run, CalledProcessError, PIPE, call

def get_head():
    try:
        standard_status = check_output(["git", "log", "-n", "1",
                                        "--no-color"]).decode()
    except CalledProcessError:
        return ""
    commit = next(line.split()[-1]
                  for line in standard_status.splitlines()
                  if "commit" in line)
    return commit


def irebase(starting_commit):
    current_commit = get_head()
    if current_commit != starting_commit:
        print("Rebasing onto %s" % starting_commit)
        command = ["git", "rebase", "--interactive", "--autostash",
                   starting_commit]
        print(" ".join(command))
        return call(["git", "rebase", "--interactive", "--autostash",
                    starting_commit])


def push():
    command = "gt.push"
    print(f"Command: {command}")
    error = call(command, shell=True)
    return error


def icommit():
    print("Commiting changes.")
    response = run(["git", "commit", "-n", "--interactive"], stderr=PIPE)
    # response = run(["git", "commit", "--interactive"], stderr=PIPE)
    error = response.stderr.decode()
    for line in error.splitlines():
        print('>>> %s' % line)
    if "Code fails pyflake check." in error:
        print("Edit and try again.")
    else:
        return response


def main():
    starting_status = get_head()
    previous_status = None
    while True:
        current_status = get_head()
        if current_status == previous_status:
            print("\nNo changes made.")
            break
        else:
            response = icommit()
            if response:
                previous_status = current_status

    irebase(starting_status)
    push()


if __name__ == "__main__":
    exit(main())
