#!/usr/bin/env python

import webbrowser
from subprocess import check_output

def readconf():
    for i in range(3):
        level = "../" * i
        try:
            raw = open('%s.git/config' % level).read()
            return raw
        except:
            pass

def get_config():
    """
    WTF Implementation
    """
    raw = readconf()
    lines = (line.strip()  for line in raw.splitlines())
    lines = (line.split("#")[0]  for line in raw.splitlines())

    config = {}
    write_to = config
    for line in lines:
        if line.startswith("["):
            line = line.strip("[]")
            keys = [part.strip('" ')  for part in  line.split()]
            write_to = config
            for key in keys:
                new_section = config.get(key, {})
                write_to[key] = new_section
                write_to = new_section
        else:
            key, value = line.split("=")
            key = key.strip()
            value = value.strip()
            write_to[key] = value

    return config


def get_branch():
    output = check_output("git branch", shell=True)
    lines = output.decode().splitlines()
    branch = next(line.strip(" *")  for line in lines  if "*" in line)
    return branch


def remote2url_fork_repo(remote):
    remote_url = remote["url"]
    protocol, path = remote_url.split("@")
    host, repository = path.split(":")
    fork, repo_url = repository.split("/")
    repo_name = repo_url.split(".")[0]
    return host, fork, repo_name



def open_compare():
    config = get_config()
    remotes =  config["remote"]
    branch = get_branch()

    origin = remotes["origin"]
    o_host, o_fork, o_name = remote2url_fork_repo(origin)

    upstream = remotes.get("upstream", origin)
    u_host, u_fork, u_name = remote2url_fork_repo(upstream)

    url = ("https://{u_host}/{u_fork}/{u_name}/compare/"
           "{branch}...{o_fork}:{branch}").format(**locals())

    return webbrowser.open(url)


if __name__ == "__main__":
    open_compare()
